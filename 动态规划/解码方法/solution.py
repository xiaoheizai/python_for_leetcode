# -*- coding: utf-8 -*-
"""
Created on Apr 13、4

@author: xiaoheizai
"""

'''
description:
一条包含字母 A-Z 的消息通过以下方式进行了编码：
'A' -> 1
'B' -> 2
...
'Z' -> 26
给定一个只包含数字的非空字符串，请计算解码方法的总数。

输入: "12"
输出: 2
解释: 它可以解码为 "AB"（1 2）或者 "L"（12）。

输入: "226"
输出: 3
解释: 它可以解码为 "BZ" (2 26), "VF" (22 6), 或者 "BBF" (2 2 6) 。

动态规划,这道题难点在于“0”的判断
1.当前字符为“0”的时候
	1）若为第一个字符：则输出0
	2）若前一个字符也为“0”，则输出0，“100”
	3）若前一个字符和当前字符组合后超过26：则a[i] = 0，如“230”
	4）若前一个字符和当前字符组合不超过26：则a[i] = a[i-2]，如“220”
	
2.当前字符不为”0“的时候
	1）若前一个字符为“0”，则a[i] = a[i-1]，如“101”
	2）若前一个字符和当前字符组合后超过26：则a[i] = a[i-1]，如“135”
	3）若前一个字符和当前字符组合后不超26：则a[i] = a[i-1] + a[i-2]，如“123”

'''


class Solution:
    def numDecodings(self, s: str) -> int:
        a = [0, 0]
        length = len(s)
        for i in range(length):
            if (i == 0 and s[i] == "0") or (s[i-1] == "0" and s[i] == "0"):
                continue
            elif i == 0:
                a[0] = 1
                a[1] = 1
            elif s[i-1] == "0":
                a[0] = a[1]
            elif int(s[i-1]) * 10 + int(s[i]) < 27:
                if s[i] == "0":
                    temp = a[0]
                    a[0] = a[1]
                    a[1] = temp
                else:
                    temp = a[1]
                    a[1] = a[0] + a[1]
                    a[0] = temp
            else:
                if s[i] == "0":
                    a[1] = 0
                else:
                    a[0] = a[1]
                
        return a[1]